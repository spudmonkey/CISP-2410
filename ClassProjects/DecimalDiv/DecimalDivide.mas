/********************************
/ Program Name: 	Division with two decimal places
/ Due: 			2014-04-07
/ Description:		divides two numbers
/ *******************************



	ORG 	100
	Clear
	Store	Quot	/ zero out quotient in case we want to run multiple times
	Input
	Store	Divid	/ Store our dividend
	Store	Temp	/ store the dividend value in temp
	Output		/ print it out
	Input
	Store	Divis	/ Store our divisor
	Output		/ print it out
Dloop,	Load 	Temp	/ load the value of the working dividend
	Subt 	Divis	/ subtract the divisor
	Store	Temp	/ store our new value for our working dividend
	Skipcond 800	/ if temp is still positive skip next
	Jump	Mout	/ go deal with result
	Load	Quot	/ load our quotient
	Add	One	/ add one to the quotient
	Store	Quot	/ store it again
	Jump 	Dloop	/ run through the loop again
Mout,	Load	Temp	/ Load our working dividend
	Skipcond 400	/ if it is equal to zero skip next line
	Jump	Odd	/ Jump to our output for evenly divisible number
	Load	Quot	/ We got an evenly divisible number, load quotient
	Add	One	/ Have to add one since we missed one in our loop above
	Output	Quot	/ print it out
	Jump	End	/ exit
Odd,	Load 	Quot	/ load our quotient
	Output	Quot	/ print it out
	Load 	Temp	/ load our remainder
	Add 	Divis	/ remainder is negative, add back the divisor to get correct value
	Store 	Temp	/ store the new value back in temp
	Load 	Dplace	/ load the max decimal places	
	Skipcond 800	/ if the number of decimal places remaining is > 0 skip next
	Jump	End	/ all done
	Clear
	Store	Prod	/ zero out our product
	Store	Quot	/ zero out our quotient
	Load	Ten	/ we will multiply by this
	Store	LCV	/ Store our second factor as the LCV
Mloop,	Load	Prod	/ Top of loop, load whatever the current value of product it
	Add	Temp	/ add our remainder to the product
	Store 	Prod	/ then store it
	Load	LCV	/ get the LCV
	Subt	One	/ decrement the loop control
	Store	LCV	/ store it for next time
	Skipcond 800	/ Have we gottne the LCV down to zero?
	Jump 	UpDec	/ if so go deal with the decimal place count
	Jump 	Mloop	/ if not run through multiply loop
UpDec,	Load 	Dplace	/ Load our number of remaining decimal places
	Subt	One	/ Decrement
	Store	Dplace	/ save it
	Load 	Prod
	Store 	Temp
	Jump	Dloop	/ go divide 
End,	Halt		/ all done

Prod,	Dec	0	/ our product from the mulitiplication
Ten,	Dec	10
Dplace,	Dec	2	/ Max number of decimal places
Temp,	Dec	0	/ temp for dividend
Divid,	Dec	0	/ Dividend
Divis,	Dec	0	/ Divisor
Quot,	Dec	0	/ The Quotient
LCV,	Dec	0	/ The loop control variable		
One,	Dec	1	/ Used to increment and decrement by 1	
